<?xml version="1.0"?>
<robot name="al5d" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:include filename="$(find al5d_description)/urdf/transmissions_lidar.urdf.xacro"/>

    <xacro:property name="M_PI" value="3.14159"/>

    <xacro:property name="base_height" value="0.02" />
    <xacro:property name="base_radius" value="0.048" />
    <xacro:property name="upper_base_height" value="0.07" />
    <xacro:property name="upper_arm_offset" value="0.006" />
    <xacro:property name="upper_arm_length" value="0.14605" />
    <xacro:property name="upper_arm_width" value="0.05" />
    <xacro:property name="lower_arm_length" value="0.187325" />
    <xacro:property name="lower_arm_width" value="0.035" />
    <xacro:property name="wrist_length" value="0.055" />
    <xacro:property name="wrist_width" value="0.025" />
    <xacro:property name="gripper_length" value="0.06" />
    <xacro:property name="gripper_width" value="0.05" />
    <xacro:property name="gripper_height" value="0.01" />

    <xacro:property name="inertia_block">
      <inertial>
        <mass value="0.3"/>
        <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
      </inertial>
    </xacro:property>

    <link name="world">
    </link>


    <link name="base">
      <visual>
        <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${base_height}" radius="${base_radius}"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 0.85"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${base_height}" radius="${base_radius}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>
    <link name="upper_base">
      <visual>
	<origin xyz="0 0 ${(upper_base_height - base_height - 0.02)/2 + base_height + 0.02}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${upper_base_height - base_height - 0.02}" radius="${base_radius}"/>
        </geometry>
        <material name="black">
        </material>
      </visual>
      <collision>
	<origin xyz="0 0 ${(upper_base_height - base_height - 0.02)/2 + base_height + 0.02}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${upper_base_height - base_height - 0.02}" radius="${base_radius}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>
    <link name="upper_arm">
      <visual>
        <origin xyz="${upper_arm_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${upper_arm_length} ${upper_arm_width} ${upper_arm_width}"/>
        </geometry>
        <material name="silver">
          <color rgba="0.8 0.8 0.8 0.85"/>
        </material>
      </visual>
      <collision>
        <origin xyz="${upper_arm_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${upper_arm_length} ${upper_arm_width} ${upper_arm_width}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>
    <link name="lower_arm">
      <visual>
        <origin xyz="${lower_arm_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${lower_arm_length} ${lower_arm_width} ${lower_arm_width}"/>
        </geometry>
        <material name="blue">
          <color rgba="0.4 0.4 1 0.85"/>
        </material>
      </visual>
      <collision>
        <origin xyz="${lower_arm_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${lower_arm_length} ${lower_arm_width} ${lower_arm_width}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>
    <link name="wrist">
      <visual>
        <origin xyz="${wrist_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${wrist_length} ${wrist_width} ${wrist_width}"/>
        </geometry>
        <material name="silver">
        </material>
      </visual>
      <collision>
        <origin xyz="${wrist_length/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${wrist_length} ${wrist_width} ${wrist_width}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>










    <link name="gripper_base">
      <visual>
	<origin xyz="${gripper_height/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${gripper_height} ${gripper_height} ${gripper_width}"/>
        </geometry>
        <material name="red">
          <color rgba="1 0.3 0.3 0.85"/>
        </material>
      </visual>
      <collision>
        <origin xyz="${gripper_width/2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${gripper_height} ${gripper_height} ${gripper_width}"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>




    <link name="lidar">
      <visual>
	<origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.0212 0.0522 0.024"/>
        </geometry>
        <material name="red">
          <color rgba="1 0.3 0.3 0.85"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.0212 0.0522 0.024"/>
        </geometry>
      </collision>
      <xacro:insert_block name="inertia_block" />
    </link>


  <joint name="lidar_rotate" type="revolute">
    <origin xyz="0 0 -0.035" rpy="0 0 0" />
    <parent link="gripper_base"/>
    <child link="lidar" />  
    <axis xyz="0 0 1"/> 
    <limit lower="-1.4" upper="1.4" effort="10" velocity="3.67"/>
  </joint>








    <link name="end">
    </link>

    <!-- joints -->
    <joint name="base" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="world"/>
      <child link="base"/>
    </joint>
    <joint name="base_rotate" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="base"/>
      <child link="upper_base"/>
      <axis xyz="0 0 1"/>
      <limit lower="-1.4" upper="1.4" effort="10" velocity="3.67"/>
    </joint>
    <joint name="shoulder_tilt" type="revolute">
      <origin xyz="0 0 ${upper_arm_offset + upper_base_height}" rpy="${M_PI/2} -${M_PI/2} 0 "/>
      <parent link="upper_base"/>
      <child link="upper_arm"/>
      <axis xyz="0 0 -1"/>
      <limit lower="-1.2" upper="1.4" effort="10" velocity="3.32"/>
    </joint>
    <joint name="elbow_tilt" type="revolute">
      <origin xyz="${upper_arm_length} 0 0" rpy="0 0 -${M_PI/2}" />
      <parent link="upper_arm"/>
      <child link="lower_arm"/>
      <axis xyz="0 0 -1"/>
      <limit lower="-1.8" upper="1.7" effort="10" velocity="3.67"/>
    </joint>
    <joint name="wrist_tilt" type="revolute">
      <origin xyz="${lower_arm_length} 0 0" rpy="0 0 0"/>
      <parent link="lower_arm"/>
      <child link="wrist"/>
      <axis xyz="0 0 -1"/>
      <limit lower="-1.9" upper="1.7" effort="10" velocity="6.98"/>
    </joint>


    <joint name="wrist_rotate" type="revolute">
      <origin xyz="${wrist_length} 0 0" rpy="${M_PI/2} 0 0"/>
      <parent link="wrist"/>
      <child link="gripper_base"/>
      <axis xyz="1 0 0"/>
      <limit lower="-2" upper="1.5" effort="10" velocity="6.98"/>
    </joint>

    <joint name="end" type="fixed">
      <origin xyz="${wrist_length} 0 0" rpy="0 ${M_PI/2} 0"/>
      <parent link="lidar"/>
      <child link="end"/>
    </joint>




  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <gazebo reference="base_rotate">
    <material value="Gazebo/Grey" />
  </gazebo>

  <gazebo reference="shoulder_tilt">
    <material value="Gazebo/Grey" />
    <turnGravityOff>true</turnGravityOff>
  </gazebo>

  <gazebo reference="elbow_tilt">
    <material value="Gazebo/Grey" />
    <turnGravityOff>true</turnGravityOff>
  </gazebo>

  <gazebo reference="wrist_tilt">
    <material value="Gazebo/Grey" />
    <turnGravityOff>true</turnGravityOff>
  </gazebo>

  <gazebo reference="wrist_rotate">
    <material value="Gazebo/Grey" />
    <turnGravityOff>true</turnGravityOff>
  </gazebo>


</robot>
