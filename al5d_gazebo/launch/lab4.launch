<?xml version="1.0"?>
<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find al5d_gazebo)/worlds/no_gravity.world"/>
    <!-- more default parameters can be changed here -->
  </include>



  <!-- Convert an xacro and put on parameter server -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro $(find al5d_description)/urdf/al5d_simple.xacro" /> -->
  <param name="robot_description" command="$(find xacro)/xacro $(find al5d_description)/urdf/al5d_cad.xacro" />

  <rosparam command="load" file="$(find al5d_gazebo)/config/al5d_position_controller.yaml" />
  <rosparam command="load" file="$(find al5d_gazebo)/config/joint_state_controller.yaml" />

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model al5d" />

  <node name="default_loaded_controllers_spawner"
    pkg="controller_manager" type="spawner" output="screen"
    args="--wait-for=/calibrated al5d_arm_position_controller1 al5d_arm_position_controller2 al5d_arm_position_controller3 al5d_arm_position_controller4 al5d_arm_position_controller5 al5d_gripper_controller1 al5d_gripper_controller2 joint_state_controller" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
  <node name="robot_tf_translator" pkg="al5d_gazebo" type="tf_translator.py" output="screen"/>


  <!-- Expose ArmController API over ROS messages for MATLAB -->
  <node pkg="al5d_gazebo" name="arm_controller_interface" type="arm_controller.py" output="screen" />

  <node name="reset_world" pkg="al5d_gazebo" type="reset_world.py" output="screen"/>


  <!-- Fake calib -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
    args="pub /calibrated std_msgs/Bool true" />
</launch>
